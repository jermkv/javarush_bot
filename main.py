import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, FSInputFile
from config import TOKEN
from messages.start_text import TEXT
from keyboards.reply import start_keyboard
from keyboards.inline import info_inline
import logging


bot = Bot(TOKEN) #–°–≤—è–∑—ã–≤–∞–ª–∏—Å—å —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ —Ç–≥ —Å –Ω–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
dp = Dispatcher() #–õ–æ–≤–∏—Ç –∞–ø–¥–µ–π—Ç—ã


@dp.message(Command('start'))
async def start_handler(message: Message):
    await message.answer(TEXT)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç –µ—â–µ {message.from_user.full_name}')


@dp.message(Command('info'))
async def info_handler(message: Message):
    await message.answer('–ú–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–∞–Ω–µ–ª—å—é', reply_markup=info_inline())




@dp.message(F.text.lower() == '–ø—Ä–∏–≤–µ—Ç')
async def text_handler(message: Message):
    await message.answer('–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç –º–æ–π –¥—Ä—É–≥ üëã')


@dp.message(F.text.lower() == '–ø–æ–∫–∞')
async def text_handler(message: Message):
    await message.answer('–û—á–µ–Ω—å –∂–∞–ª—å —á—Ç–æ —Ç—ã —É—Ö–æ–¥–∏—à—å(')

@dp.message(F.text.lower() == '—Ñ–∞–π–ª')
async def file_handler(message: Message):
    doc = FSInputFile('lesson.pdf')
    await message.answer_document(doc)

@dp.message(F.text.lower() == '–µ–¥–∞')
async def eat_handelr(message: Message):
    await message.answer('–ö–∞–∫ –±—É–¥–µ—à—å –∫—É—à–∞—Ç—å –∫–∞—Ç–ª–µ—Ç–∫–∏?', reply_markup=start_keyboard())




@dp.message(F.text.lower().contains('–∫–∞–∫ –¥–µ–ª–∞'))
async def text_handler(message: Message):
    await message.answer('–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ')

@dp.message(F.text == '–° –ø—é—Ä–µ—à–∫–æ–π ü•î')
async def potato_handler(message: Message):
    await message.answer('–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä')

@dp.message(F.photo)
async def photo_handler(message: Message):
    await message.answer('–≠—Ç–æ —Ñ–æ—Ç–∫–∞ –≤–æ—Ç —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∫–∞')
    img = FSInputFile('media/img/code.png')
    await message.answer_photo(img)




@dp.message(F.voice)
async def photo_handler(message: Message):
    await message.answer('–≠—Ç–æ –≥—Å')

@dp.message(F.sticker)
async def photo_handler(message: Message):
    await message.answer('–≠—Ç–æ —Å—Ç–∏–∫–µ—Ä')




async def main():
    logging.basicConfig(level=logging.INFO) #–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    await dp.start_polling(bot)


asyncio.run(main())

